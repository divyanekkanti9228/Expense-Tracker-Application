{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyOwn\\\\expense-tracker\\\\frontend\\\\src\\\\Components\\\\Chart\\\\Chart.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import {Chart as ChartJs, \n//     CategoryScale,\n//     LinearScale,\n//     PointElement,\n//     LineElement,\n//     Title,\n//     Tooltip,\n//     Legend,\n//     ArcElement,\n// } from 'chart.js'\n\n// import {Line} from 'react-chartjs-2'\n// import styled from 'styled-components'\n// import { useGlobalContext } from '../../context/globalContext'\n// import { dateFormat } from '../../utils/dateFormat'\n\n// ChartJs.register(\n//     CategoryScale,\n//     LinearScale,\n//     PointElement,\n//     LineElement,\n//     Title,\n//     Tooltip,\n//     Legend,\n//     ArcElement,\n// )\n\n// function Chart() {\n//     const {incomes, expenses} = useGlobalContext()\n\n//     const data = {\n//         labels: incomes.map((inc) =>{\n//             const {date} = inc\n//             return dateFormat(date)\n//         }),\n//         datasets: [\n//             {\n//                 label: 'Income',\n//                 data: [\n//                     ...incomes.map((income) => {\n//                         const {amount} = income\n//                         return amount\n//                     })\n//                 ],\n//                 backgroundColor: 'green',\n//                 tension: .2\n//             },\n//             {\n//                 label: 'Expenses',\n//                 data: [\n//                     ...expenses.map((expense) => {\n//                         const {amount} = expense\n//                         return amount\n//                     })\n//                 ],\n//                 backgroundColor: 'red',\n//                 tension: .2\n//             }\n//         ]\n//     }\n\n//     return (\n//         <ChartStyled >\n//             <Line data={data} />\n//         </ChartStyled>\n//     )\n// }\n\n// const ChartStyled = styled.div`\n//     background: #FCF6F9;\n//     border: 2px solid #FFFFFF;\n//     box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n//     padding: 1rem;\n//     border-radius: 20px;\n//     height: 100%;\n// `;\n\n// export default Chart\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { dateFormat } from '../../utils/dateFormat';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n\n  // Generate random light colors for each income category\n  const incomeColors = incomes.map(() => generateRandomLightColor());\n\n  // Calculate total income and total expense\n  const totalIncome = incomes.reduce((acc, income) => acc + income.amount, 0);\n  const totalExpense = expenses.reduce((acc, expense) => acc + expense.amount, 0);\n\n  // Define data\n  const data = {\n    datasets: [{\n      data: [totalIncome, totalExpense],\n      backgroundColor: incomeColors.concat('red') // Use random light colors for incomes and 'red' for expenses\n    }],\n\n    labels: ['Income', 'Expenses']\n  };\n  const options = {\n    cutout: '70%' // Adjust the gap size as needed\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(Chart, \"PHep46UhTemPLuSa3MfIkZAuTiE=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart;\nconst ChartStyled = styled.div`\n  background: #fcf6f9;\n  border: 2px solid #ffffff;\n  box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n  padding: 1rem;\n  border-radius: 20px;\n  height: 100%;\n`;\n_c2 = ChartStyled;\nfunction generateRandomLightColor() {\n  const randomColor = () => Math.floor(Math.random() * 200) + 55; // Generate a random number between 55 and 255\n  const r = randomColor();\n  const g = randomColor();\n  const b = randomColor();\n  return `rgb(${r},${g},${b})`;\n}\nexport default Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","styled","useGlobalContext","dateFormat","Doughnut","jsxDEV","_jsxDEV","Chart","_s","incomes","expenses","incomeColors","map","generateRandomLightColor","totalIncome","reduce","acc","income","amount","totalExpense","expense","data","datasets","backgroundColor","concat","labels","options","cutout","ChartStyled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","randomColor","Math","floor","random","r","g","b","$RefreshReg$"],"sources":["D:/MyOwn/expense-tracker/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["// import React from 'react'\r\n// import {Chart as ChartJs, \r\n//     CategoryScale,\r\n//     LinearScale,\r\n//     PointElement,\r\n//     LineElement,\r\n//     Title,\r\n//     Tooltip,\r\n//     Legend,\r\n//     ArcElement,\r\n// } from 'chart.js'\r\n\r\n// import {Line} from 'react-chartjs-2'\r\n// import styled from 'styled-components'\r\n// import { useGlobalContext } from '../../context/globalContext'\r\n// import { dateFormat } from '../../utils/dateFormat'\r\n\r\n// ChartJs.register(\r\n//     CategoryScale,\r\n//     LinearScale,\r\n//     PointElement,\r\n//     LineElement,\r\n//     Title,\r\n//     Tooltip,\r\n//     Legend,\r\n//     ArcElement,\r\n// )\r\n\r\n// function Chart() {\r\n//     const {incomes, expenses} = useGlobalContext()\r\n\r\n//     const data = {\r\n//         labels: incomes.map((inc) =>{\r\n//             const {date} = inc\r\n//             return dateFormat(date)\r\n//         }),\r\n//         datasets: [\r\n//             {\r\n//                 label: 'Income',\r\n//                 data: [\r\n//                     ...incomes.map((income) => {\r\n//                         const {amount} = income\r\n//                         return amount\r\n//                     })\r\n//                 ],\r\n//                 backgroundColor: 'green',\r\n//                 tension: .2\r\n//             },\r\n//             {\r\n//                 label: 'Expenses',\r\n//                 data: [\r\n//                     ...expenses.map((expense) => {\r\n//                         const {amount} = expense\r\n//                         return amount\r\n//                     })\r\n//                 ],\r\n//                 backgroundColor: 'red',\r\n//                 tension: .2\r\n//             }\r\n//         ]\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <ChartStyled >\r\n//             <Line data={data} />\r\n//         </ChartStyled>\r\n//     )\r\n// }\r\n\r\n// const ChartStyled = styled.div`\r\n//     background: #FCF6F9;\r\n//     border: 2px solid #FFFFFF;\r\n//     box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n//     padding: 1rem;\r\n//     border-radius: 20px;\r\n//     height: 100%;\r\n// `;\r\n\r\n// export default Chart\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport { dateFormat } from '../../utils/dateFormat';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nfunction Chart() {\r\n  const { incomes, expenses } = useGlobalContext();\r\n\r\n  // Generate random light colors for each income category\r\n  const incomeColors = incomes.map(() => generateRandomLightColor());\r\n\r\n  // Calculate total income and total expense\r\n  const totalIncome = incomes.reduce((acc, income) => acc + income.amount, 0);\r\n  const totalExpense = expenses.reduce((acc, expense) => acc + expense.amount, 0);\r\n\r\n  // Define data\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [totalIncome, totalExpense],\r\n        backgroundColor: incomeColors.concat('red'), // Use random light colors for incomes and 'red' for expenses\r\n      },\r\n    ],\r\n    labels: ['Income', 'Expenses'],\r\n  };\r\n\r\n  const options = {\r\n    cutout: '70%', // Adjust the gap size as needed\r\n  };\r\n\r\n  return (\r\n    <ChartStyled>\r\n      <Doughnut data={data} options={options} />\r\n    </ChartStyled>\r\n  );\r\n}\r\n\r\nconst ChartStyled = styled.div`\r\n  background: #fcf6f9;\r\n  border: 2px solid #ffffff;\r\n  box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n  padding: 1rem;\r\n  border-radius: 20px;\r\n  height: 100%;\r\n`;\r\n\r\nfunction generateRandomLightColor() {\r\n  const randomColor = () => Math.floor(Math.random() * 200) + 55; // Generate a random number between 55 and 255\r\n  const r = randomColor();\r\n  const g = randomColor();\r\n  const b = randomColor();\r\n  return `rgb(${r},${g},${b})`;\r\n}\r\n\r\nexport default Chart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}